volumes:
  opennutrilab_local_postgres_data: {}
  opennutrilab_local_postgres_data_backups: {}
  opennutrilab_local_redis_data: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: opennutrilab_local_django
    container_name: opennutrilab_local_django
    volumes:
      - /app/.venv
      - .:/app:z
    depends_on:
      - postgres
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - '8000:8000'
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: opennutrilab_production_postgres
    container_name: opennutrilab_local_postgres
    volumes:
      - opennutrilab_local_postgres_data:/var/lib/postgresql/data
      - opennutrilab_local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres

  # mailpit:
  #   image: docker.io/axllent/mailpit:latest
  #   container_name: opennutrilab_local_mailpit
  #   ports:
  #     - "8025:8025"

  redis:
    image: docker.io/redis:6
    container_name: opennutrilab_local_redis
    volumes:
      - opennutrilab_local_redis_data:/data

  celeryworker:
    <<: *django
    image: opennutrilab_local_celeryworker
    container_name: opennutrilab_local_celeryworker
    depends_on:
      - redis
      - postgres
      # - mailpit
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: opennutrilab_local_celerybeat
    container_name: opennutrilab_local_celerybeat
    depends_on:
      - redis
      - postgres
      # - mailpit
    ports: []

  node:
    build:
      context: .
      dockerfile: ./compose/local/node/Dockerfile
    image: opennutrilab_local_node
    container_name: opennutrilab_local_node
    depends_on:
      - django
    volumes:
      - .:/app:z
      # http://jdlm.info/articles/2016/03/06/lessons-building-node-app-docker.html
      - /app/node_modules
    command: npm run dev
    ports:
      - '3000:3000'
